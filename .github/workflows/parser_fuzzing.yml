on:
  push:
    paths:
      - ".github/workflows/parser_fuzzing.yml"
      - "keyvalues-parser/src/**"
      - "keyvalues-parser/fuzz/**"
  pull_request:
    paths:
      - ".github/workflows/parser_fuzzing.yml"
      - "keyvalues-parser/src/**"
      - "keyvalues-parser/fuzz/**"

name: Fuzz Parser

# TODO: it would be nice to unify setting up cargo fuzz and then just use
# separate runners for fuzzing. Might be able to do it by uploading and
# downloading the artifacts, and then purging all of them at the end
jobs:
  run_parse_fuzzer:
    name: "Fuzz Parser (5 minutes)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Nightly is needed for `cargo fuzz`
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-11-01
          override: true

      - name: Get rustc version
        id: get-version
        run: |
          echo "::set-output name=version::$(rustc -V | sed 's/ /_/g')"

      - name: Cargo registry cache
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: run_parse_fuzzer-cargo-registry-${{ steps.get-version.outputs.version }}-1

      - name: Cargo build cache
        uses: actions/cache@v2
        with:
          path: keyvalues-parser/fuzz/target
          key: run_parse_fuzzer-cargo-build-${{ steps.get-version.outputs.version }}

      - name: Install cargo quickinstall
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-quickinstall

      - name: Install cargo fuzz
        uses: actions-rs/cargo@v1
        with:
          command: quickinstall
          args: cargo-fuzz

      - name: Run parse fuzzer
        run: cargo fuzz run parse -- -max_total_time=300 -verbosity=0
        working-directory: keyvalues-parser

  run_tokenstream_fuzzer:
    name: "Fuzz TokenStream (5 minutes)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Nightly is needed for `cargo fuzz`
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-11-01
          override: true

      - name: Get rustc version
        id: get-version
        run: |
          echo "::set-output name=version::$(rustc -V | sed 's/ /_/g')"

      - name: Cargo registry cache
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: run_tokenstream_fuzzer-cargo-registry-${{ steps.get-version.outputs.version }}-1

      - name: Cargo build cache
        uses: actions/cache@v2
        with:
          path: keyvalues-parser/fuzz/target
          key: run_tokenstream_fuzzer-cargo-build-${{ steps.get-version.outputs.version }}

      - name: Install cargo quickinstall
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-quickinstall

      - name: Install cargo fuzz
        uses: actions-rs/cargo@v1
        with:
          command: quickinstall
          args: cargo-fuzz

      - name: Run token_stream fuzzer
        run: cargo fuzz run token_stream -- -max_total_time=300 -verbosity=0
        working-directory: keyvalues-parser
